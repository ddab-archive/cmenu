<*HelpAuthor HTA1.9*>
AK
33
[Footnotes]
#=IDH_CPM_CLASS
$=TPJColourPopupMenu
K=TPJColourPopupMenu
A=TPJColourPopupMenu;TPJColourPopupMenu_object
[End]
7
HS
6
0

1
IDH_CPM_HEIRACHY

HS
7
0

1
IDH_CPM_PROPERTIES

HS
8
0

1
IDH_CPM_METHODS

HS
9
0

1
IDH_CPM_EVENTS

NS
34
BM
143
PJColourPopupMenu.bmp
0
1
HS
144
0

0
IDH_CPM_CE

2418
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss \fcharset0 Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 34>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf1\b \protect <BM 143>\plain\f0\fs22\cf3\b  TPJColourPopupMenu\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 6>\plain\f0\fs18\cf2 Heirachy\plain\f0\fs18\cf1 \protect </HS 6>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 7>\plain\f0\fs18\cf2 Properties\plain\f0\fs18\cf1 \protect </HS 7>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 8>\plain\f0\fs18\cf2 Methods\plain\f0\fs18\cf1 \protect </HS 8>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 9>\plain\f0\fs18\cf2 Events\plain\f0\fs18\cf1 \protect </HS 9>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 34>\plain\f0\fs18\cf2 
\par TPJColourPopupMenu is a pop-up menu component that displays the sixteen basic Windows colours as a menu or as a colour palette.
\par 
\par \plain\f0\fs18\cf2\b Unit\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 PJColourPopupMenu
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 This component provides a pop-up menu that displays the sixteen basic Windows colours in a user defined way according to the DisplayStyle property - either as a list of colour names (with or without colour swatches) or as a colour palette. The programmer can further customise the display of the colours by setting the OwnerDraw property to true and controlling the painting of the menu. The MenuColumns property determines whether the menu is displayed as a single column, or in 2, 4 or 8 columns. The colour selected by the user is given by the SelectedColour property.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 At design time the main component properties can be set using the \plain\f0\fs18\cf1 \protect <HS 144>\plain\f0\fs18\cf2 Colour menu designer\plain\f0\fs18\cf1 \protect </HS 144>\plain\f0\fs18\cf2 . This is accessed by double clicking the component\plain\f1\fs18\cf2  \plain\f0\fs18\cf2 or \plain\f1\fs18\cf2 by\plain\f0\fs18\cf2  selecting \plain\f0\fs18\cf2\i Colour menu designer\plain\f0\fs18\cf2  from the component's context menu.
\par }

[Footnotes]
#=IDH_CPM_HEIRACHY
$=TPJColourPopupMenu heirachy
[End]
5
HS
1
0

0

AL(TObject_object,1)
HS
2
0

0

AL(TPersistent_object,1)
HS
3
0

0

AL(TComponent_object,1)
HS
4
0

0

AL(TMenu_object,1)
HS
5
0

0

AL(TPopupMenu_object,1)
889
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}}{\colortbl\red0\green0\blue0;\red0\green0\blue0;\red0\green128\blue0;}\pard \plain \plain\f0\fs18\cf1\b Heirachy\plain\f0\fs18\cf1 
\par 
\par \plain\f0\fs18\cf2 \protect <HS 1>\plain\f0\fs18\cf1 TObject\plain\f0\fs18\cf2 \protect </HS 1>\plain\f0\fs18\cf1 
\par     |
\par \plain\f0\fs18\cf2 \protect <HS 2>\plain\f0\fs18\cf1 TPersistent\plain\f0\fs18\cf2 \protect </HS 2>\plain\f0\fs18\cf1 
\par     |
\par \plain\f0\fs18\cf2 \protect <HS 3>\plain\f0\fs18\cf1 TComponent\plain\f0\fs18\cf2 \protect </HS 3>\plain\f0\fs18\cf1 
\par     |
\par \plain\f0\fs18\cf2 \protect <HS 4>\plain\f0\fs18\cf1 TMenu\plain\f0\fs18\cf2 \protect </HS 4>\plain\f0\fs18\cf1 
\par     |
\par \plain\f0\fs18\cf2 \protect <HS 5>\plain\f0\fs18\cf1 TPopupMenu\plain\f0\fs18\cf2 \protect </HS 5>\plain\f0\fs18\cf1 
\par }

[Footnotes]
#=IDH_CPM_PROPERTIES
$=TPJColourPopupMenu properties
[End]
20
HS
10
0

0

AL(TPopupMenu_object,1)
HS
11
0

0

AL(TPopupMenu_Alignment,1)
HS
12
0

0

AL(TPopupMenu_AutoPopup,1)
HS
13
0

0

AL(TMenu_BiDiMode,1)
HS
14
0

0

AL(TMenu_Handle,1)
HS
15
0

0

AL(TPopupMenu_HelpContext,1)
HS
16
0

0

AL(TComponent_Name,1)
HS
17
0

0

AL(TMenu_ParentBiDiMode,1)
HS
18
0

0

AL(TPopupMenu_PopupComponent,1)
HS
19
0

0

AL(TComponent_Tag,1)
HS
20
0

0

AL(TMenu_WindowHandle,1)
HS
35
0

0
IDH_CPM_BITMAPHEIGHT

HS
36
0

0
IDH_CPM_BITMAPWIDTH

HS
37
0

0
IDH_CPM_CHECKSELECTEDCOLOUR

HS
38
0

0
IDH_CPM_DISPLAYSTYLE

HS
39
0

0
IDH_CPM_IMAGES

HS
40
0

0
IDH_CPM_ITEMS

HS
41
0

0
IDH_CPM_MENUCOLUMNS

HS
42
0

0
IDH_CPM_OWNERDRAW

HS
43
0

0
IDH_CPM_SELECTEDCOLOUR

3030
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss \fcharset0 Arial;}}{\colortbl\red0\green0\blue0;\red0\green0\blue0;\red0\green128\blue0;}\pard \plain \plain\f0\fs18\cf1\b Properties\plain\f0\fs18\cf1 
\par 
\par \pard \tx200 \tx2000 \tx2200 \tx4000 \tx4200 \tab \plain\f0\fs18\cf2 \protect <HS 11>\plain\f0\fs18\cf1 Alignment\plain\f0\fs18\cf2 \protect </HS 11>\plain\f0\fs18\cf1 \tab \tab \plain\f0\fs18\cf2 \protect <HS 12>\plain\f0\fs18\cf1 AutoPopup\plain\f0\fs18\cf2 \protect </HS 12>\plain\f0\fs18\cf1 \tab \tab \plain\f0\fs18\cf2 \protect <HS 13>\plain\f0\fs18\cf1 BiDiMode\plain\f0\fs18\cf2 \protect </HS 13>\plain\f0\fs18\cf1 
\par \tab \plain\f0\fs18\cf2 \protect <HS 35>\plain\f0\fs18\cf1 BitmapHeight\plain\f0\fs18\cf2 \protect </HS 35>\plain\f0\fs18\cf1 \tab \tab \plain\f0\fs18\cf2 \protect <HS 36>\plain\f0\fs18\cf1 BitmapWidth\plain\f0\fs18\cf2 \protect </HS 36>\plain\f0\fs18\cf1 \tab \tab \plain\f0\fs18\cf2 \protect <HS 37>\plain\f0\fs18\cf1 CheckSelectedColour\plain\f0\fs18\cf2 \protect </HS 37>\plain\f0\fs18\cf1 
\par \tab \plain\f0\fs18\cf2 \protect <HS 38>\plain\f0\fs18\cf1 DisplayStyle\plain\f0\fs18\cf2 \protect </HS 38>\plain\f0\fs18\cf1 \tab >\tab \plain\f0\fs18\cf2 \protect <HS 14>\plain\f0\fs18\cf1 Handle\plain\f0\fs18\cf2 \protect </HS 14>\plain\f0\fs18\cf1 \tab \tab \plain\f0\fs18\cf2 \protect <HS 15>\plain\f0\fs18\cf1 HelpContext\plain\f0\fs18\cf2 \protect </HS 15>\plain\f0\fs18\cf1 
\par \tab \plain\f0\fs18\cf2 \protect <HS 39>\plain\f0\fs18\cf1 Images\plain\f0\fs18\cf2 \protect </HS 39>\plain\f0\fs18\cf1 \tab \tab \plain\f0\fs18\cf2 \protect <HS 40>\plain\f0\fs18\cf1 Items\plain\f0\fs18\cf2 \protect </HS 40>\plain\f0\fs18\cf1 \tab \tab \plain\f0\fs18\cf2 \protect <HS 41>\plain\f0\fs18\cf1 MenuColumns\plain\f0\fs18\cf2 \protect </HS 41>\plain\f0\fs18\cf1 
\par \tab \plain\f0\fs18\cf2 \protect <HS 16>\plain\f0\fs18\cf1 Name\plain\f0\fs18\cf2 \protect </HS 16>\plain\f0\fs18\cf1 \tab \tab \plain\f0\fs18\cf2 \protect <HS 42>\plain\f0\fs18\cf1 OwnerDraw\plain\f0\fs18\cf2 \protect </HS 42>\plain\f0\fs18\cf1 \tab \tab \plain\f0\fs18\cf2 \protect <HS 17>\plain\f0\fs18\cf1 ParentBiDiMode\plain\f0\fs18\cf2 \protect </HS 17>\plain\f0\fs18\cf1 
\par >\tab \plain\f0\fs18\cf2 \protect <HS 18>\plain\f0\fs18\cf1 PopupComponent\plain\f0\fs18\cf2 \protect </HS 18>\plain\f0\fs18\cf1 \tab \tab \plain\f0\fs18\cf2 \protect <HS 43>\plain\f0\fs18\cf1 SelectedColour\plain\f0\fs18\cf2 \protect </HS 43>\plain\f0\fs18\cf1 \tab \tab \plain\f0\fs18\cf2 \protect <HS 19>\plain\f0\fs18\cf1 Tag\plain\f0\fs18\cf2 \protect </HS 19>\plain\f0\fs18\cf1 
\par >\tab \plain\f0\fs18\cf2 \protect <HS 20>\plain\f0\fs18\cf1 WindowHandle\plain\f0\fs18\cf2 \protect </HS 20>\plain\f0\fs18\cf1 
\par 
\par plus \plain\f1\fs18\cf1 any other\plain\f0\fs18\cf1  run time properties inherited from \plain\f0\fs18\cf2 \protect <HS 10>\plain\f1\fs18\cf1 TPopupMenu\plain\f0\fs18\cf2 \protect </HS 10>\plain\f0\fs18\cf1 .
\par 
\par >\tab = run time only.
\par }

[Footnotes]
#=IDH_CPM_BITMAPHEIGHT
$=TPJColourPopupMenu.BitmapHeight
K=BitmapHeight,TPJColourPopupMenu;TPJColourPopupMenu,BitmapHeight;BitmapHeight
A=TPJColourPopupMenu_BitmapHeight;BitmapHeight_property;BitmapHeight
[End]
5
NS
76
HS
77
0

0
IDH_CPM_CLASS

KP
96
HS
98
0

0
IDH_CPM_DISPLAYSTYLE

HS
100
0

0

AL(TPJColourPopupMenu_BitmapWidth;TPJColourPopupMenu_DisplayStyle)
1464
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss \fcharset0 Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 76>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.BitmapHeight\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 77>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 77>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 100>\plain\f0\fs18\cf2 See also\plain\f0\fs18\cf1 \protect </HS 100>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 76>\plain\f0\fs18\cf2 
\par The height of the colour bitmap in a palette style colour pop-up menu.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 96>\plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  BitmapHeight: Integer;\plain\f1\fs18\cf1 \protect </KP 96>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 This property determines the height of the bitmap used to display a colour on the pop-up menu. The value is ignored unless the \plain\f0\fs18\cf1 \protect <HS 98>\plain\f0\fs18\cf2 DisplayStyle\plain\f0\fs18\cf1 \protect </HS 98>\plain\f0\fs18\cf2  property \plain\f2\fs18\cf2 is set to\plain\f0\fs18\cf2  dsColourOnly. The default value is 9.
\par }

[Footnotes]
#=IDH_CPM_BITMAPWIDTH
$=TPJColourPopupMenu.BitmapWidth
K=BitmapWidth,TPJColourPopupMenu;TPJColourPopupMenu,BitmapWidth;BitmapWidth
A=TPJColourPopupMenu_BitmapWidth;BitmapWidth_property;BitmapWidth
[End]
5
NS
78
HS
79
0

0
IDH_CPM_CLASS

KP
95
HS
97
0

0
IDH_CPM_DISPLAYSTYLE

HS
99
0

0

AL(TPJColourPopupMenu_BitmapHeight;TPJColourPopupMenu_DisplayStyle)
1465
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss \fcharset0 Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 78>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.BitmapWidth\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 79>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 79>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 99>\plain\f0\fs18\cf2 See also\plain\f0\fs18\cf1 \protect </HS 99>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 78>\plain\f0\fs18\cf2 
\par The width of the colour bitmap in a palette style colour pop-up menu.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 95>\plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  BitmapWidth: Integer;\plain\f1\fs18\cf1 \protect </KP 95>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 This property determines the width of the bitmap used to display a colour on the pop-up menu. The value is ignored unless the \plain\f0\fs18\cf1 \protect <HS 97>\plain\f0\fs18\cf2 DisplayStyle\plain\f0\fs18\cf1 \protect </HS 97>\plain\f0\fs18\cf2  property \plain\f2\fs18\cf2 is set to\plain\f0\fs18\cf2  dsColourOnly. The default value is 9.
\par 
\par }

[Footnotes]
#=IDH_CPM_CHECKSELECTEDCOLOUR
$=TPJColourPopupMenu.CheckSelectedColour
K=CheckSelectedColour,TPJColourPopupMenu;TPJColourPopupMenu,CheckSelectedColour;CheckSelectedColour
A=TPJColourPopupMenu_CheckSelectedColour;CheckSelectedColour_property;CheckSelectedColour
[End]
5
NS
80
HS
81
0

0
IDH_CPM_CLASS

KP
101
HS
102
0

0
IDH_CPM_SELECTEDCOLOUR

HS
103
0

0

AL(TPJColourPopupMenu_SelectedColour)
1367
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 80>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.CheckSelectedColour\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 81>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 81>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 103>\plain\f0\fs18\cf2 See also\plain\f0\fs18\cf1 \protect </HS 103>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 80>\plain\f0\fs18\cf2 
\par Causes the current colour to be checked on the menu.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 101>\plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  CheckSelectedColour: Boolean;\plain\f1\fs18\cf1 \protect </KP 101>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 When true the current colour is checked (or highlighted) in the menu. The current colour is the value of the \plain\f0\fs18\cf1 \protect <HS 102>\plain\f0\fs18\cf2 SelectedColour\plain\f0\fs18\cf1 \protect </HS 102>\plain\f0\fs18\cf2  property at the time the menu is displayed.
\par }

[Footnotes]
#=IDH_CPM_DISPLAYSTYLE
$=TPJColourPopupMenu.DisplayStyle
K=DisplayStyle,TPJColourPopupMenu;TPJColourPopupMenu,DisplayStyle;DisplayStyle
A=TPJColourPopupMenu_DisplayStyle;DisplayStyle_property;DisplayStyle
[End]
10
HS
1
0

0
IDH_TPJCOLOURMENUDISPLAYSTYLE

NS
82
HS
83
0

0
IDH_CPM_CLASS

KP
104
BD
108
2
0
BD
109
3
0
HS
126
0

0
IDH_CPM_OWNERDRAW

HS
127
0

0

AL(TPJColourPopupMenu_OnMeasureMenuItem;TPJColourPopupMenu_OnDrawMenuItem;TPJColourPopupMenu_OwnerDraw)
HS
134
0

0
IDH_CPM_ONMEASUREMENUITEM

HS
135
0

0
IDH_CPM_ONDRAWMENUITEM

3246
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss \fcharset0 Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 82>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.DisplayStyle\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 83>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 83>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 127>\plain\f0\fs18\cf2 See also\plain\f0\fs18\cf1 \protect </HS 127>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 82>\plain\f0\fs18\cf2 
\par The style in which the menu is displayed.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 104>\plain\f1\fs18\cf2\b type\plain\f1\fs18\cf2  TPJColourMenuDisplayStyle = (dsTextOnly, dsColourOnly, 
\par   dsBoth, dsOwnerDraw);
\par 
\par \plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  DisplayStyle: \plain\f1\fs18\cf1 \protect <HS 1>\plain\f1\fs18\cf2 TPJColourMenuDisplayStyle\plain\f1\fs18\cf1 \protect </HS 1>\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 104>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 The DisplayStyle property determines the style used to display the colours on the menu. The possible values are:
\par \plain\f0\fs8\cf2 
\par \pard \fi-1600 \li1600 \tx1600 \plain\f0\fs18\cf2\b Value\tab Meaning\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf1 \protect <BD 108>\plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </BD 108>\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf2\i dsTextOnly\plain\f0\fs18\cf2 \tab Displays only the names of the colours
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2\i dsColourOnly\plain\f0\fs18\cf2 \tab Displays only the colours - use this style to display a palette of colours
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2\i dsBoth\plain\f0\fs18\cf2 \tab Displays both a small rectangle of colour and the name of the colour
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2\i dsOwnerDraw\plain\f0\fs18\cf2 \tab User draws menu items - sizing and drawing of menu items takes place in \plain\f0\fs18\cf1 \protect <HS 134>\plain\f0\fs18\cf2 OnMeasureMenuItem\plain\f0\fs18\cf1 \protect </HS 134>\plain\f0\fs18\cf2  and \plain\f0\fs18\cf1 \protect <HS 135>\plain\f0\fs18\cf2 OnDrawMenuItem\plain\f0\fs18\cf1 \protect </HS 135>\plain\f0\fs18\cf2  events. Use this style to display the menu in a style that is not provided by TPJColourPopupMenu.
\par \pard \plain\f0\fs18\cf1 \protect <BD 109>\plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </BD 109>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 The default value is dsBoth.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 When DisplayStyle is set to dsOwnerDraw the \plain\f0\fs18\cf1 \protect <HS 126>\plain\f0\fs18\cf2 OwnerDraw\plain\f0\fs18\cf1 \protect </HS 126>\plain\f0\fs18\cf2  property is \plain\f2\fs18\cf2 automatically \plain\f0\fs18\cf2 set to True, otherwise it is False. Setting OwnerDraw to True causes the value of DisplayStyle to be set to dsOwnerDraw.
\par }

[Footnotes]
#=IDH_CPM_IMAGES
$=TPJColourPopupMenu.Images
K=Images,TPJColourPopupMenu;TPJColourPopupMenu,Images;Images
A=TPJColourPopupMenu_Images;Images_property;Images
[End]
5
NS
84
HS
85
0

0
IDH_CPM_CLASS

HS
110
0

0

AL(TImageList,1)
KP
111
HS
168
0

0
IDH_CPM_ONCREATEMENUITEM

1956
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss \fcharset0 Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 84>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.Images\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 85>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 85>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 84>\plain\f0\fs18\cf2 
\par Lists the images that can appear beside individual menu items.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 111>\plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  Images: \plain\f1\fs18\cf1 \protect <HS 110>\plain\f1\fs18\cf2 TImageList\plain\f1\fs18\cf1 \protect </HS 110>\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 111>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Use Images to hold the set of images that can appear beside menu items in the menu. To \plain\f2\fs18\cf2 do this\plain\f0\fs18\cf2  the menu items that are used to display the colour menu must have their ImageIndex properties set to the required values. Since direct access to menu items is prohibited the only way to do this is to set the ImageIndex properties in the component's \plain\f0\fs18\cf1 \protect <HS 168>\plain\f0\fs18\cf2 OnCreateMenuItem\plain\f0\fs18\cf1 \protect </HS 168>\plain\f0\fs18\cf2  event handler.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 When the DisplayStyle property is dsColourOnly then the images in the list are i\plain\f2\fs18\cf2 gn\plain\f0\fs18\cf2 ored. When DisplayStyle is dsBoth then the images from the \plain\f2\fs18\cf2 image \plain\f0\fs18\cf2 list are used in place of the colours that usually appear in the menu.
\par }

[Footnotes]
#=IDH_CPM_ITEMS
$=TPJColourPopupMenu.Items
K=Items,TPJColourPopupMenu;TPJColourPopupMenu,Items;Items
A=TPJColourPopupMenu_Items;Items_property;Items
[End]
7
NS
86
HS
87
0

0
IDH_CPM_CLASS

HS
112
0

0

AL(TMenuItem_object,1)
KP
113
HS
118
0

0

AL(TPJColourPopupMenu_OnCreateMenuItem)
HS
169
0

0
IDH_CPM_ONCREATEMENUITEM

HS
200
0

0
IDH_ECPM_CLASS

2112
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss \fcharset0 Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 86>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.Items\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 87>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 87>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 118>\plain\f0\fs18\cf2 See also\plain\f0\fs18\cf1 \protect </HS 118>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 86>\plain\f0\fs18\cf2 
\par Not accessible in TPJColourPopupMenu.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 113>\plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  Items: \plain\f1\fs18\cf1 \protect <HS 112>\plain\f1\fs18\cf2 TMenuItem\plain\f1\fs18\cf1 \protect </HS 112>\plain\f1\fs18\cf2 ; \plain\f1\fs18\cf2\b default\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 113>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Do not access this property. An \plain\f0\fs18\cf1 \protect <HS 200>\plain\f0\fs18\cf2 EPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 200>\plain\f0\fs18\cf2  exception is raised if an attempt is made to read the property.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 In ancestor components the Items property gives access to the menu's items. Because TPJColourPopupMenu manages all the menu items on the user's behalf, providing programatic access to them is meaningless (the component recreates the menu items \plain\f2\fs18\cf2 each time it displays, \plain\f0\fs18\cf2 so any changes would be lost).
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2\b Tip\plain\f0\fs18\cf2 : To modify colour menu items write a handler for the \plain\f0\fs18\cf1 \protect <HS 169>\plain\f0\fs18\cf2 OnCreateMenuItem\plain\f0\fs18\cf1 \protect </HS 169>\plain\f0\fs18\cf2  event.
\par }

[Footnotes]
#=IDH_CPM_MENUCOLUMNS
$=TPJColourPopupMenu.MenuColumns
K=MenuColumns,TPJColourPopupMenu;TPJColourPopupMenu,MenuColumns;MenuColumns
A=TPJColourPopupMenu_MenuColumns;MenuColumns_property;MenuColumns
[End]
4
HS
1
0

0
IDH_TPJCOLOURMENUCOLUMNS

NS
88
HS
89
0

0
IDH_CPM_CLASS

KP
122
1428
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss \fcharset0 Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 88>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.MenuColumns\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 89>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 89>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 88>\plain\f0\fs18\cf2 
\par Determines the number of columns in menu.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 122>\plain\f1\fs18\cf2\b type\plain\f1\fs18\cf2  TPJColourMenuColumns = (mc1,  mc2,  mc4,  mc8);
\par 
\par \plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  MenuColumns: \plain\f1\fs18\cf1 \protect <HS 1>\plain\f1\fs18\cf2 TPJColourMenuColumns\plain\f1\fs18\cf1 \protect </HS 1>\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 122>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Use the MenuColumns property to \plain\f2\fs18\cf2 set\plain\f0\fs18\cf2  the number of columns the menu uses to display all the colours. Either one (mc1), two (mc2), four (mc4) or eight (mc8) columns can be used. The default value is mc1.
\par }

[Footnotes]
#=IDH_CPM_OWNERDRAW
$=TPJColourPopupMenu.OwnerDraw
K=OwnerDraw,TPJColourPopupMenu;TPJColourPopupMenu,OwnerDraw;OwnerDraw
A=TPJColourPopupMenu_OwnerDraw;OwnerDraw_property;OwnerDraw
[End]
7
NS
90
HS
91
0

0
IDH_CPM_CLASS

KP
123
HS
124
0

0
IDH_CPM_ONMEASUREMENUITEM

HS
125
0

0
IDH_CPM_ONDRAWMENUITEM

HS
128
0

0

AL(TPJColourPopupMenu_OnMeasureMenuItem;TPJColourPopupMenu_OnDrawMenuItem;TPJColourPopupMenu_DisplayStyle)
HS
129
0

0
IDH_CPM_DISPLAYSTYLE

2491
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss \fcharset0 Arial;}{\f2\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 90>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.OwnerDraw\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 91>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 91>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 128>\plain\f0\fs18\cf2 See also\plain\f0\fs18\cf1 \protect </HS 128>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 90>\plain\f0\fs18\cf2 
\par Specifies whether the menu items are drawn by the component or the \plain\f1\fs18\cf2 application\plain\f0\fs18\cf2 .
\par 
\par \plain\f2\fs18\cf1\b \protect <KP 123>\plain\f2\fs18\cf2\b property\plain\f2\fs18\cf2  OwnerDraw: Boolean;\plain\f2\fs18\cf1 \protect </KP 123>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Set OwnerDraw to True to indicate that the application will draw menu items. When OwnerDraw is True, \plain\f1\fs18\cf2 the component\plain\f0\fs18\cf2  \plain\f1\fs18\cf2 triggers\plain\f0\fs18\cf2  an \plain\f0\fs18\cf1 \protect <HS 124>\plain\f0\fs18\cf2 OnMeasureMenuItem\plain\f0\fs18\cf1 \protect </HS 124>\plain\f0\fs18\cf2  and an \plain\f0\fs18\cf1 \protect <HS 125>\plain\f0\fs18\cf2 OnDrawMenuItem\plain\f0\fs18\cf1 \protect </HS 125>\plain\f0\fs18\cf2  event when each colour menu item needs to be rendered on screen.  
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 When OwnerDraw is False default drawing takes place according to the present value of the \plain\f0\fs18\cf1 \protect <HS 129>\plain\f0\fs18\cf2 DisplayStyle\plain\f0\fs18\cf1 \protect </HS 129>\plain\f0\fs18\cf2  property. 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 The value of OwnerDraw is related to the value of DisplayStyle. When DisplayStyle is set to dsOwnerDraw then OwnerDraw is set True and can't be altered. When DisplayStyle is set to any other value then OwnerDraw is set False. Setting OwnerDraw back to True sets DisplayStyle to dsOwnerDraw.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Use OwnerDraw to display the menu i\plain\f1\fs18\cf2 n\plain\f0\fs18\cf2  a style that is not implemented by TPJColourPopupMenu.
\par }

[Footnotes]
#=IDH_CPM_SELECTEDCOLOUR
$=TPJColourPopupMenu.SelectedColour
K=SelectedColour,TPJColourPopupMenu;TPJColourPopupMenu,SelectedColour;SelectedColour
A=TPJColourPopupMenu_SelectedColour;SelectedColour_property;SelectedColour
[End]
6
NS
92
HS
93
0

0
IDH_CPM_CLASS

KP
130
HS
131
0

0

AL(TColor,1)
HS
132
0

0
IDH_CPM_CHECKSELECTEDCOLOUR

HS
133
0

0

AL(TPJColourPopupMenu_CheckSelectedColour)
1646
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 92>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.SelectedColour\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 93>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 93>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 133>\plain\f0\fs18\cf2 See also\plain\f0\fs18\cf1 \protect </HS 133>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 92>\plain\f0\fs18\cf2 
\par The currently selected colour.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 130>\plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  SelectedColour: \plain\f1\fs18\cf1 \protect <HS 131>\plain\f1\fs18\cf2 TColor\plain\f1\fs18\cf1 \protect </HS 131>\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 130>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 The SelectedColour property stores the colour value relating to the currently selected menu item. Read SelectedColour to find which colour the user selected from the menu. To highlight a colour on the menu, set the SelectedColour property to the required value. When the menu is next displayed the associated menu item will be checked (if \plain\f0\fs18\cf1 \protect <HS 132>\plain\f0\fs18\cf2 CheckSelectedColour\plain\f0\fs18\cf1 \protect </HS 132>\plain\f0\fs18\cf2  is True).
\par }

[Footnotes]
#=IDH_CPM_METHODS
$=TPJColourPopupMenu methods
[End]
4
HS
21
0

0

AL(TPopupMenu_object,1)
HS
31
0

0
IDH_CPM_CREATE

HS
32
0

0
IDH_CPM_DESTROY

HS
33
0

0
IDH_CPM_POPUP

807
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}}{\colortbl\red0\green0\blue0;\red0\green0\blue0;\red0\green128\blue0;}\pard \plain \plain\f0\fs18\cf1\b Methods\plain\f0\fs18\cf1 
\par 
\par \pard \tx200 \tab \plain\f0\fs18\cf2 \protect <HS 31>\plain\f0\fs18\cf1 Create\plain\f0\fs18\cf2 \protect </HS 31>\plain\f0\fs18\cf1 
\par \tab \plain\f0\fs18\cf2 \protect <HS 32>\plain\f0\fs18\cf1 Destroy\plain\f0\fs18\cf2 \protect </HS 32>\plain\f0\fs18\cf1 
\par \tab \plain\f0\fs18\cf2 \protect <HS 33>\plain\f0\fs18\cf1 Popup\plain\f0\fs18\cf2 \protect </HS 33>\plain\f0\fs18\cf1 
\par \pard 
\par TPJColourPopupMenu also inherits methods from \plain\f0\fs18\cf2 \protect <HS 21>\plain\f0\fs18\cf1 TPopupMenu\plain\f0\fs18\cf2 \protect </HS 21>\plain\f0\fs18\cf1 .
\par }

[Footnotes]
#=IDH_CPM_CREATE
$=TPJColourPopupMenu.Create
K=Create,TPJColourPopupMenu;TPJColourPopupMenu,Create;Create
A=TPJColourPopupMenu_Create;Create_method;Create
[End]
4
KP
22
NS
23
HS
24
0

0
IDH_CPM_CLASS

HS
136
0

0

AL(TComponent_object,1)
1264
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 23>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.Create\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 24>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 24>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 23>\plain\f0\fs18\cf2 
\par Creates an instance of TPJColourPopupMenu.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 22>\plain\f1\fs18\cf2\b constructor\plain\f1\fs18\cf2  Create(AOwner: \plain\f1\fs18\cf1 \protect <HS 136>\plain\f1\fs18\cf2 TComponent\plain\f1\fs18\cf1 \protect </HS 136>\plain\f1\fs18\cf2 ); \plain\f1\fs18\cf2\b override\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 22>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Call Create to create a colour pop-up menu at runtime. Colour pop-up menus placed in forms or data modules at design time are created automatically.\plain\f0\fs20\cf2 
\par }

[Footnotes]
#=IDH_CPM_DESTROY
$=TPJColourPopupMenu.Destroy
K=Destroy,TPJColourPopupMenu;TPJColourPopupMenu,Destroy;Destroy
A=TPJColourPopupMenu_Destroy;Destroy_method;Destroy
[End]
3
NS
25
KP
26
HS
27
0

0
IDH_CPM_CLASS

1159
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 25>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.Destroy\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 27>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 27>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 25>\plain\f0\fs18\cf2 
\par Destroys an instance of TPJColourPopupMenu.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 26>\plain\f1\fs18\cf2\b destructor\plain\f1\fs18\cf2  Destroy; \plain\f1\fs18\cf2\b override\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 26>\plain\f1\fs18\cf2 
\par \plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Do not call Destroy directly in an application. Instead, call Free. Free verifies that the pop-up menu is not already freed, and only then calls Destroy.\plain\f0\fs20\cf2 
\par }

[Footnotes]
#=IDH_CPM_POPUP
$=TPJColourPopupMenu.Popup
K=Popup,TPJColourPopupMenu;TPJColourPopupMenu,Popup;Popup
A=TPJColourPopupMenu_Popup;Popup_method;Popup
[End]
3
KP
28
NS
29
HS
30
0

0
IDH_CPM_CLASS

1151
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fmodern \fcharset0 Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 29>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.Popup\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 30>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 30>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 29>\plain\f0\fs18\cf2 
\par Displays the colour pop-up menu onscreen.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 28>\plain\f1\fs18\cf2\b procedure\plain\f1\fs18\cf2  Popup(X, Y: Integer); \plain\f2\fs18\cf2\b override\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 28>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Call Popup to bring up the colour pop-up menu. The menu appears at the screen coordinates indicated by the values (in pixels) of X and Y. 
\par }

[Footnotes]
#=IDH_CPM_EVENTS
$=TPJColourPopupMenu events
[End]
6
HS
44
0

0
IDH_CPM_ONCHANGE

HS
45
0

0
IDH_CPM_ONDRAWMENUITEM

HS
46
0

0
IDH_CPM_ONMEASUREMENUITEM

HS
47
0

0
IDH_CPM_ONPOPUP

HS
48
0

0
IDH_CPM_ONSELECTCOLOUR

HS
158
0

0
IDH_CPM_ONCREATEMENUITEM

1043
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}}{\colortbl\red0\green0\blue0;\red0\green0\blue0;\red0\green128\blue0;}\pard \plain \plain\f0\fs18\cf1\b Events\plain\f0\fs18\cf1 
\par 
\par \pard \tx200 \tab \plain\f0\fs18\cf2 \protect <HS 44>\plain\f0\fs18\cf1 OnChange\plain\f0\fs18\cf2 \protect </HS 44>\plain\f0\fs18\cf1 
\par \tab \plain\f0\fs18\cf2 \protect <HS 158>\plain\f0\fs18\cf1 OnCreateMenuItem\plain\f0\fs18\cf2 \protect </HS 158>\plain\f0\fs18\cf1 
\par \tab \plain\f0\fs18\cf2 \protect <HS 45>\plain\f0\fs18\cf1 OnDrawMenuItem\plain\f0\fs18\cf2 \protect </HS 45>\plain\f0\fs18\cf1 
\par \tab \plain\f0\fs18\cf2 \protect <HS 46>\plain\f0\fs18\cf1 OnMeasureMenuItem\plain\f0\fs18\cf2 \protect </HS 46>\plain\f0\fs18\cf1 
\par \tab \plain\f0\fs18\cf2 \protect <HS 47>\plain\f0\fs18\cf1 OnPopup\plain\f0\fs18\cf2 \protect </HS 47>\plain\f0\fs18\cf1 
\par \tab \plain\f0\fs18\cf2 \protect <HS 48>\plain\f0\fs18\cf1 OnSelectColour\plain\f0\fs18\cf2 \protect </HS 48>\plain\f0\fs18\cf1 
\par }

[Footnotes]
#=IDH_CPM_ONCHANGE
$=TPJColourPopupMenu.OnChange
K=OnChange,TPJColourPopupMenu;TPJColourPopupMenu,OnChange;OnChange
A=TPJColourPopupMenu_OnChange;OnChange_event;OnChange
[End]
4
KP
49
NS
50
HS
51
0

0
IDH_CPM_CLASS

HS
137
0

0

AL(TMenuItem_object,1)
1700
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 50>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.OnChange\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 51>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 51>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 50>\plain\f0\fs18\cf2 
\par Event never occurs in TPJColourPopupMenu.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 49>\plain\f1\fs18\cf2\b type\plain\f1\fs18\cf2  TMenuChangeEvent = \plain\f1\fs18\cf2\b procedure\plain\f1\fs18\cf2  (Sender: TObject; 
\par   Source: \plain\f1\fs18\cf1 \protect <HS 137>\plain\f1\fs18\cf2 TMenuItem\plain\f1\fs18\cf1 \protect </HS 137>\plain\f1\fs18\cf2 ; Rebuild: Boolean) \plain\f1\fs18\cf2\b of object\plain\f1\fs18\cf2 ;
\par \plain\f1\fs8\cf2 
\par \plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  OnChange: TMenuChangeEvent;\plain\f1\fs18\cf1 \protect </KP 49>\plain\f1\fs18\cf2 
\par \plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 In ancestor classes the OnChange event handler is triggered in response to changes in the menu's structure. Since the user cannot change the menu structure directly in TPJColourPopupMenu, this event is disabled and should never be triggered.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 It is possible to assign an event handler to the event, but it will never be called.
\par }

[Footnotes]
#=IDH_CPM_ONCREATEMENUITEM
$=TPJColourPopupMenu.OnCreateMenuItem
K=OnCreateMenuItem,TPJColourPopupMenu;TPJColourPopupMenu,OnCreateMenuItem;OnCreateMenuItem
A=TPJColourPopupMenu_OnCreateMenuItem;OnCreateMenuItem_event;OnCreateMenuItem
[End]
27
HS
2
0

0
IDH_TPJCREATECOLOURMENUITEMEVENT

HS
160
0

0

AL(TMenuItem_object,1)
HS
161
0

0

AL(TColor,1)
NS
162
HS
163
0

0
IDH_CPM_CLASS

BD
164
2
0
BD
165
3
0
BD
166
3
0
BD
167
2
0
HS
180
0

0

AL(TMenuItem_Bitmap,1)
HS
181
0

0

AL(TMenuItem_Caption,1)
HS
182
0

0

AL(TMenuItem_Checked,1)
HS
183
0

0

AL(TMenuItem_HelpContext,1)
HS
185
0

0
IDH_CPM_DISPLAYSTYLE

HS
186
0

0
IDH_CPM_DISPLAYSTYLE

HS
187
0

0
IDH_CPM_CHECKSELECTEDCOLOUR

HS
188
0

0

AL(TPopupMenu_HelpContext,1)
HS
190
0

0

AL(TMenuItem_OnClick,1)
HS
191
0

0

AL(TMenuItem_OnDrawItem,1)
HS
192
0

0

AL(TMenuItem_OnMeasureItem,1)
HS
193
0

0
IDH_CPM_ONSELECTCOLOUR

HS
194
0

0
IDH_CPM_ONDRAWMENUITEM

HS
195
0

0
IDH_CPM_ONMEASUREMENUITEM

HS
196
0

0
IDH_CPM_OWNERDRAW

HS
197
0

0
IDH_CPM_OWNERDRAW

HS
198
0

0

AL(TMenuItem_Break,1)
HS
199
0

0
IDH_CPM_MENUCOLUMNS

6623
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss \fcharset0 Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 162>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.OnCreateMenuItem\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 163>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 163>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 162>\plain\f0\fs18\cf2 
\par Occurs when a colour menu item is being created.
\par 
\par \plain\f1\fs18\cf2\b type\plain\f1\fs18\cf2  TPJCreateColourMenuItemEvent = procedure (Sender: TObject;
\par   MenuItem: \plain\f1\fs18\cf1 \protect <HS 160>\plain\f1\fs18\cf2 TMenuItem\plain\f1\fs18\cf1 \protect </HS 160>\plain\f1\fs18\cf2 ; Colour: \plain\f1\fs18\cf1 \protect <HS 161>\plain\f1\fs18\cf2 TColor\plain\f1\fs18\cf1 \protect </HS 161>\plain\f1\fs18\cf2 ) \plain\f1\fs18\cf2\b of object\plain\f1\fs18\cf2 ;
\par \plain\f1\fs8\cf2 
\par \plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  OnCreateMenuItem: \plain\f1\fs18\cf1 \protect <HS 2>\plain\f1\fs18\cf2 TPJCreateColourMenuItemEvent\plain\f1\fs18\cf1 \protect </HS 2>\plain\f1\fs18\cf2 ;\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 This event is triggered for each menu item in the colour menu just after the menu item has been created and before it is displayed. Provide an event handler to customise the menu items that are displayed. A reference to the menu item is provided by the \plain\f0\fs18\cf2\i MenuItem\plain\f0\fs18\cf2  parameter. The colour that the menu item represents is given by the \plain\f0\fs18\cf2\i Colour\plain\f0\fs18\cf2  parameter.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Any of \plain\f0\fs18\cf2\i MenuItem\plain\f0\fs18\cf2 's properties can be changed, but great care should be taken if properties required by the component are changed. The menu item properties that are used by TPJColourPopupMenu are:
\par \plain\f0\fs8\cf2 
\par \pard \fi-2000 \li2000 \tx2000 \plain\f0\fs18\cf2\b Property\tab Use in TPJColourPopupMenu\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf1 \protect <BD 167>\plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </BD 167>\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 180>\plain\f0\fs18\cf2 Bitmap\plain\f0\fs18\cf1 \protect </HS 180>\plain\f0\fs18\cf2 \tab Used when \plain\f0\fs18\cf1 \protect <HS 185>\plain\f0\fs18\cf2 DisplayStyle\plain\f0\fs18\cf1 \protect </HS 185>\plain\f0\fs18\cf2  is dsBoth to display the colour swatch.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 198>\plain\f0\fs18\cf2 Break\plain\f0\fs18\cf1 \protect </HS 198>\plain\f0\fs18\cf2 \tab Used to break the menu into the number of columns per the \plain\f0\fs18\cf1 \protect <HS 199>\plain\f0\fs18\cf2 MenuColumns\plain\f0\fs18\cf1 \protect </HS 199>\plain\f0\fs18\cf2  property
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 181>\plain\f0\fs18\cf2 Caption\plain\f0\fs18\cf1 \protect </HS 181>\plain\f0\fs18\cf2 \tab Used to store the caption text if text is being displayed (i.e. \plain\f0\fs18\cf1 \protect <HS 186>\plain\f0\fs18\cf2 DisplayStyle\plain\f0\fs18\cf1 \protect </HS 186>\plain\f0\fs18\cf2  is not dsColourOnly. Update the caption to translate the menu items to other languages.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 182>\plain\f0\fs18\cf2 Checked\plain\f0\fs18\cf1 \protect </HS 182>\plain\f0\fs18\cf2 \tab Used to check the selected colour when \plain\f0\fs18\cf1 \protect <HS 187>\plain\f0\fs18\cf2 CheckSelectedColour\plain\f0\fs18\cf1 \protect </HS 187>\plain\f0\fs18\cf2  is True.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 183>\plain\f0\fs18\cf2 HelpContext\plain\f0\fs18\cf1 \protect </HS 183>\plain\f0\fs18\cf2 \tab Always set to the same value as the component's \plain\f0\fs18\cf1 \protect <HS 188>\plain\f0\fs18\cf2 HelpContext\plain\f0\fs18\cf1 \protect </HS 188>\plain\f0\fs18\cf2  property. Change this to provide different help for each menu item.
\par \plain\f0\fs18\cf1 \protect <BD 166>\plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </BD 166>\plain\f0\fs18\cf2 
\par \pard \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2\i MenuItem's\plain\f0\fs18\cf2  events are reserved for use by the component. Any handlers assigned to the events are ignored by TPJColourPopupMenu. The component provides equivalent events of its own for each of the menu item events as follows:
\par \plain\f0\fs8\cf2 
\par \pard \fi-2000 \li2000 \tx2000 \plain\f0\fs18\cf2\b TMenuItem event\plain\f0\fs18\cf2 \tab \plain\f0\fs18\cf2\b Related TPJColourPopupMenu event\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf1 \protect <BD 164>\plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </BD 164>\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 190>\plain\f0\fs18\cf2 OnClick\plain\f0\fs18\cf1 \protect </HS 190>\plain\f0\fs18\cf2 \tab \plain\f0\fs18\cf1 \protect <HS 193>\plain\f0\fs18\cf2 OnSelectColour\plain\f0\fs18\cf1 \protect </HS 193>\plain\f0\fs18\cf2  - use the SelectedColour property to identify the menu item that was clicked.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 191>\plain\f0\fs18\cf2 OnDrawItem\plain\f0\fs18\cf1 \protect </HS 191>\plain\f0\fs18\cf2 \tab \plain\f0\fs18\cf1 \protect <HS 194>\plain\f0\fs18\cf2 OnDrawMenuItem\plain\f0\fs18\cf1 \protect </HS 194>\plain\f0\fs18\cf2  (triggered only if \plain\f0\fs18\cf1 \protect <HS 196>\plain\f0\fs18\cf2 OwnerDraw\plain\f0\fs18\cf1 \protect </HS 196>\plain\f0\fs18\cf2  is True) - us\plain\f2\fs18\cf2 e\plain\f0\fs18\cf2  the event's \plain\f0\fs18\cf2\i Colour\plain\f0\fs18\cf2  parameter to identify the related menu item.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 192>\plain\f0\fs18\cf2 OnMeasureItem\plain\f0\fs18\cf1 \protect </HS 192>\plain\f0\fs18\cf2 \tab \plain\f0\fs18\cf1 \protect <HS 195>\plain\f0\fs18\cf2 OnMeasureMenuItem\plain\f0\fs18\cf1 \protect </HS 195>\plain\f0\fs18\cf2  (triggered if \plain\f0\fs18\cf1 \protect <HS 197>\plain\f0\fs18\cf2 OwnerDraw\plain\f0\fs18\cf1 \protect </HS 197>\plain\f0\fs18\cf2  is True) - us\plain\f2\fs18\cf2 e\plain\f0\fs18\cf2  the event's \plain\f0\fs18\cf2\i Colour\plain\f0\fs18\cf2  parameter to identify the related menu item.
\par \plain\f0\fs18\cf1 \protect <BD 165>\plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </BD 165>\plain\f0\fs18\cf2 
\par \pard 
\par }

[Footnotes]
#=IDH_CPM_ONDRAWMENUITEM
$=TPJColourPopupMenu.OnDrawMenuItem
K=OnDrawMenuItem,TPJColourPopupMenu;TPJColourPopupMenu,OnDrawMenuItem;OnDrawMenuItem
A=TPJColourPopupMenu_OnDrawMenuItem;OnDrawMenuItem_event;OnDrawMenuItem
[End]
13
HS
2
0

0
IDH_TPJDRAWCOLOURMENUITEMEVENT

NS
52
HS
53
0

0

AL(TPJColourPopupMenu_OnMeasureMenuItem;TPJColourPopupMenu_OwnerDraw)
HS
54
0

0
IDH_CPM_CLASS

HS
56
0

0
IDH_CPM_ONMEASUREMENUITEM

HS
57
0

0
IDH_CPM_SELECTEDCOLOUR

HS
58
0

0
IDH_CPM_CHECKSELECTEDCOLOUR

HS
63
0

0
IDH_CPM_OWNERDRAW

KP
244
HS
245
0

0

AL(TMenuItem_object,1)
HS
246
0

0

AL(TCanvas_object,1)
HS
247
0

0

AL(TRect,1)
HS
248
0

0

AL(TColor,1)
4217
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss \fcharset0 Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 52>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.OnDrawMenuItem\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 54>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 54>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 53>\plain\f0\fs18\cf2 See also\plain\f0\fs18\cf1 \protect </HS 53>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 52>\plain\f0\fs18\cf2 
\par Occurs when a colour menu item needs to be redisplayed.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 244>\plain\f1\fs18\cf2\b type\plain\f1\fs18\cf2  TPJDrawColourMenuItemEvent = \plain\f1\fs18\cf2\b procedure\plain\f1\fs18\cf2  (Sender: TObject;
\par   MenuItem: \plain\f1\fs18\cf1 \protect <HS 245>\plain\f1\fs18\cf2 TMenuItem\plain\f1\fs18\cf1 \protect </HS 245>\plain\f1\fs18\cf2 ; ACanvas: \plain\f1\fs18\cf1 \protect <HS 246>\plain\f1\fs18\cf2 TCanvas\plain\f1\fs18\cf1 \protect </HS 246>\plain\f1\fs18\cf2 ; ARect: \plain\f1\fs18\cf1 \protect <HS 247>\plain\f1\fs18\cf2 TRect\plain\f1\fs18\cf1 \protect </HS 247>\plain\f1\fs18\cf2 ; 
\par   Selected: Boolean; Colour: \plain\f1\fs18\cf1 \protect <HS 248>\plain\f1\fs18\cf2 TColor\plain\f1\fs18\cf1 \protect </HS 248>\plain\f1\fs18\cf2 ) \plain\f1\fs18\cf2\b of object\plain\f1\fs18\cf2 ;
\par 
\par \plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  OnDrawMenuItem: \plain\f1\fs18\cf1 \protect <HS 2>\plain\f1\fs18\cf2 TPJDrawColourMenuItemEvent\plain\f1\fs18\cf1 \protect </HS 2>\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 244>\plain\f1\fs18\cf2 
\par \plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Use OnDrawMenuItem to write a handler for drawing colour menu items. The event only occurs when the \plain\f0\fs18\cf1 \protect <HS 63>\plain\f0\fs18\cf2 OwnerDraw\plain\f0\fs18\cf1 \protect </HS 63>\plain\f0\fs18\cf2  property is true. OnDrawMenuItem is triggered once for each colour menu item.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 OnDrawMenuItem is of type TPJDrawColourMenuItemEvent. OnDrawMenuItem passes \plain\f2\fs18\cf2 six \plain\f0\fs18\cf2 parameters to its handler describing the item to be drawn:
\par \plain\f0\fs8\cf2 
\par \pard \fi-400 \li400 \tx400 \plain\f0\fs18\cf2 \bullet \tab \plain\f2\fs18\cf2\i Sender\plain\f0\fs18\cf2  - refers to the TPJColourPopupMenu\plain\f2\fs18\cf2  component that triggered the event.\plain\f0\fs18\cf2 
\par \bullet \tab \plain\f0\fs18\cf2\i MenuItem\plain\f0\fs18\cf2  - refers to the menu item to be drawn (do not change the properties of this menu item).
\par \bullet \tab \plain\f0\fs18\cf2\i ACanvas\plain\f0\fs18\cf2  - the canvas on which the menu item is to be drawn.
\par \bullet \tab \plain\f0\fs18\cf2\i ARect\plain\f0\fs18\cf2  - the rectangle in which to draw.
\par \bullet \tab \plain\f0\fs18\cf2\i Selected\plain\f0\fs18\cf2  - whether the menu item is currently selected
\par \bullet \tab \plain\f0\fs18\cf2\i Colour\plain\f0\fs18\cf2  - the colour represented by the menu item.
\par \pard \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 The size of the rectangle that contains the menu item is determined by the values set by the user in the \plain\f0\fs18\cf1 \protect <HS 56>\plain\f0\fs18\cf2 OnMeasureMenuItem\plain\f0\fs18\cf1 \protect </HS 56>\plain\f0\fs18\cf2  event handler.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Use the \plain\f0\fs18\cf1 \protect <HS 58>\plain\f0\fs18\cf2 CheckSelectedColour\plain\f0\fs18\cf1 \protect </HS 58>\plain\f0\fs18\cf2  property in cojunction with the \plain\f0\fs18\cf1 \protect <HS 57>\plain\f0\fs18\cf2 SelectedColour\plain\f0\fs18\cf1 \protect </HS 57>\plain\f0\fs18\cf2  property to determine whether the menu item should be checked (CheckSelectedColour will be true and SelectedColour will equal the event handler's Colour parameter if the item is to be checked).
\par }

[Footnotes]
#=IDH_CPM_ONMEASUREMENUITEM
$=TPJColourPopupMenu.OnMeasureMenuItem
K=OnMeasureMenuItem,TPJColourPopupMenu;TPJColourPopupMenu,OnMeasureMenuItem;OnMeasureMenuItem
A=TPJColourPopupMenu_OnMeasureMenuItem;OnMeasureMenuItem_event;OnMeasureMenuItem
[End]
9
HS
2
0

0
IDH_TPJMEASURECOLOURMENUITEMEVENT

NS
59
HS
60
0

0
IDH_CPM_CLASS

HS
61
0

0

AL(TPJColourPopupMenu_OnDrawMenuItem;TPJColourPopupMenu_OwnerDraw)
HS
64
0

0
IDH_CPM_OWNERDRAW

KP
249
HS
250
0

0

AL(TMenuItem_object,1)
HS
251
0

0

AL(TCanvas_object,1)
HS
252
0

0

AL(TColor,1)
3529
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fswiss \fcharset0 Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 59>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.OnMeasureMenuItem\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 60>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 60>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 61>\plain\f0\fs18\cf2 See also\plain\f0\fs18\cf1 \protect </HS 61>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 59>\plain\f0\fs18\cf2 
\par Occurs on owner-draw colour pop-up menus to determine menu item size before the menu is drawn.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 249>\plain\f1\fs18\cf2\b type\plain\f1\fs18\cf2  TPJMeasureColourMenuItemEvent = \plain\f1\fs18\cf2\b procedure\plain\f1\fs18\cf2  (Sender: TObject;
\par   MenuItem: \plain\f1\fs18\cf1 \protect <HS 250>\plain\f1\fs18\cf2 TMenuItem\plain\f1\fs18\cf1 \protect </HS 250>\plain\f1\fs18\cf2 ; ACanvas: \plain\f1\fs18\cf1 \protect <HS 251>\plain\f1\fs18\cf2 TCanvas\plain\f1\fs18\cf1 \protect </HS 251>\plain\f1\fs18\cf2 ; 
\par   \plain\f1\fs18\cf2\b var\plain\f1\fs18\cf2  Width, Height: Integer; Colour: \plain\f1\fs18\cf1 \protect <HS 252>\plain\f1\fs18\cf2 TColor\plain\f1\fs18\cf1 \protect </HS 252>\plain\f1\fs18\cf2 ) \plain\f1\fs18\cf2\b of object\plain\f1\fs18\cf2 ;
\par \plain\f1\fs8\cf2 
\par \plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  OnMeasureMenuItem: \plain\f1\fs18\cf1 \protect <HS 2>\plain\f1\fs18\cf2 TPJMeasureColourMenuItemEvent\plain\f1\fs18\cf1 \protect </HS 2>\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 249>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Write an OnMeasureItem event handler to indicate the size of owner-draw colour menu items. It is called once for each of the colour menu items to be drawn. The event occurs only if the \plain\f0\fs18\cf1 \protect <HS 64>\plain\f0\fs18\cf2 OwnerDraw\plain\f0\fs18\cf1 \protect </HS 64>\plain\f0\fs18\cf2  property is true. 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 OnDrawMenuItem passes \plain\f2\fs18\cf2 six\plain\f0\fs18\cf2  parameters to its handler describing the item to be measured:
\par \plain\f0\fs8\cf2 
\par \pard \fi-400 \li400 \tx400 \plain\f0\fs18\cf2 \bullet \tab \plain\f2\fs18\cf2\i Sender\plain\f0\fs18\cf2  - refers to the TPJColourPopupMenu\plain\f2\fs18\cf2  component that triggered the event.\plain\f0\fs18\cf2 
\par \bullet \tab \plain\f0\fs18\cf2\i MenuItem\plain\f0\fs18\cf2  - refers to the menu item to be measured (do not change the properties of this menu item).
\par \bullet \tab \plain\f0\fs18\cf2\i ACanvas\plain\f0\fs18\cf2  - the canvas on which the menu item is to be drawn.
\par \bullet \tab \plain\f0\fs18\cf2\i Width\plain\f0\fs18\cf2  - set this value to the required width of the menu item (determines the width of the rectangle passed to the OnDrawMenuItem event handler).
\par \bullet \tab \plain\f0\fs18\cf2\i Height\plain\f0\fs18\cf2  - set this value to the required height of the menu item (determines the height of the rectangle passed to the OnDrawMenuItem event handler).
\par \bullet \tab \plain\f0\fs18\cf2\i Colour\plain\f0\fs18\cf2  - the colour of the menu item to be drawn.
\par }

[Footnotes]
#=IDH_CPM_ONPOPUP
$=TPJColourPopupMenu.OnPopup
K=OnPopup,TPJColourPopupMenu;TPJColourPopupMenu,OnPopup;OnPopup
A=TPJColourPopupMenu_OnPopup;OnPopup_event;OnPopup
[End]
4
NS
66
KP
67
HS
68
0

0

AL(TNotifyEvent,1)
HS
69
0

0
IDH_CPM_CLASS

1135
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 66>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.OnPopup\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 69>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 69>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 66>\plain\f0\fs18\cf2 
\par Occurs just before the colour pop-up menu appears.
\par 
\par \plain\f1\fs18\cf1 \protect <KP 67>\plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  OnPopup: \plain\f1\fs18\cf1 \protect <HS 68>\plain\f1\fs18\cf2 TNotifyEvent\plain\f1\fs18\cf1 \protect </HS 68>\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 67>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Write an OnPopup event handler to take specific action just before the pop-up menu appears.
\par }

[Footnotes]
#=IDH_CPM_ONSELECTCOLOUR
$=TPJColourPopupMenu.OnSelectColour
K=OnSelectColour,TPJColourPopupMenu;TPJColourPopupMenu,OnSelectColour;OnSelectColour
A=TPJColourPopupMenu_OnSelectColour;OnSelectColour_event;OnSelectColour
[End]
6
HS
70
0

0

AL(TNotifyEvent,1)
HS
71
0

0

AL(TPJColourPopupMenu_SelectedColour)
HS
72
0

0
IDH_CPM_SELECTEDCOLOUR

KP
73
NS
74
HS
75
0

0
IDH_CPM_CLASS

1460
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 74>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourPopupMenu.OnSelectColour\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 75>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 75>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 71>\plain\f0\fs18\cf2 See also\plain\f0\fs18\cf1 \protect </HS 71>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 74>\plain\f0\fs18\cf2 
\par Occurs when the user selects a colour on the pop-up menu.
\par 
\par \plain\f1\fs18\cf1\b \protect <KP 73>\plain\f1\fs18\cf2\b property\plain\f1\fs18\cf2  OnSelectColour: \plain\f1\fs18\cf1 \protect <HS 70>\plain\f1\fs18\cf2 TNotifyEvent\plain\f1\fs18\cf1 \protect </HS 70>\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 73>\plain\f0\fs18\cf2 
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 This event is triggered when the user selects a colour on the pop-up menu. Retrieve the selected colour by accessing the component's \plain\f0\fs18\cf1 \protect <HS 72>\plain\f0\fs18\cf2 SelectedColour\plain\f0\fs18\cf1 \protect </HS 72>\plain\f0\fs18\cf2  property.
\par }

[Footnotes]
#=IDH_CPM_CE
$=TPJColourPopupMenu Component Editor
K=Colour menu designer;TPJColourPopupMenu,Colour menu designer;
A=TPJColourPopupMenuCE
[End]
10
NS
146
BD
148
2
0
BD
149
3
0
HS
151
0

0
IDH_CPM_DISPLAYSTYLE

HS
152
0

0
IDH_CPM_MENUCOLUMNS

HS
153
0

0
IDH_CPM_CHECKSELECTEDCOLOUR

HS
154
0

0
IDH_CPM_BITMAPHEIGHT

HS
155
0

0
IDH_CPM_BITMAPWIDTH

HS
156
0

0
IDH_CPM_SELECTEDCOLOUR

HS
157
0

0
IDH_CPM_CLASS

3729
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 146>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b Colour Menu Designer\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 146>\plain\f0\fs18\cf2 
\par Use this component editor to quickly set the key properties of a \plain\f0\fs18\cf1 \protect <HS 157>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 157>\plain\f0\fs18\cf2  component. To access the editor at design time, simply double click the component or select the component and right click it, then choose "Colour menu designer" from the pop-up menu.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 The following properties can be set using the designer's controls:
\par \plain\f0\fs8\cf2 
\par \pard \fi-2000 \li2000 \tx2000 \plain\f0\fs18\cf2\b Property\plain\f0\fs18\cf2 \tab \plain\f0\fs18\cf2\b Control\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf1 \protect <BD 148>\plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </BD 148>\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 151>\plain\f0\fs18\cf2 DisplayStyle\plain\f0\fs18\cf1 \protect </HS 151>\plain\f0\fs18\cf2 \tab Select the required style from the \plain\f0\fs18\cf2\i Display style\plain\f0\fs18\cf2  drop-down list.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 152>\plain\f0\fs18\cf2 MenuColumns\plain\f0\fs18\cf1 \protect </HS 152>\plain\f0\fs18\cf2 \tab Choose the required number of columns from the \plain\f0\fs18\cf2\i Menu columns\plain\f0\fs18\cf2  drop-down list.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 153>\plain\f0\fs18\cf2 CheckSelectedColour\plain\f0\fs18\cf1 \protect </HS 153>\plain\f0\fs18\cf2 \tab Check the \plain\f0\fs18\cf2\i Check selected colour\plain\f0\fs18\cf2  check box if you want the currently selected colour to be checked in the colour menu.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 154>\plain\f0\fs18\cf2 BitmapHeight\plain\f0\fs18\cf1 \protect </HS 154>\plain\f0\fs18\cf2 \tab Choose the required bitmap height by altering the value in the \plain\f0\fs18\cf2\i Bitmap height\plain\f0\fs18\cf2  edit box using the up-down arrows. This control is only available when a "Colour only" display style is selected.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 155>\plain\f0\fs18\cf2 BitmapWidth\plain\f0\fs18\cf1 \protect </HS 155>\plain\f0\fs18\cf2 \tab Choose the required bitmap width by altering the value in the \plain\f0\fs18\cf2\i Bitmap height\plain\f0\fs18\cf2  edit box using the up-down arrows. This control is only available when a "Colour only" display style is selected.
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 156>\plain\f0\fs18\cf2 SelectedColour\plain\f0\fs18\cf1 \protect </HS 156>\plain\f0\fs18\cf2 \tab Click the \plain\f0\fs18\cf2\i Click to test\plain\f0\fs18\cf2  button and select the required colour from the menu. The selected colour is shown on the button face.
\par \plain\f0\fs18\cf1 \protect <BD 149>\plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </BD 149>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \pard \plain\f0\fs18\cf2 Once all the required properties have been set you can check the appearance of the menu by clicking the \plain\f0\fs18\cf2\i Click to test\plain\f0\fs18\cf2  button. 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Once all choices have been made click \plain\f0\fs18\cf2\i OK\plain\f0\fs18\cf2  to accept the changes or \plain\f0\fs18\cf2\i Cancel\plain\f0\fs18\cf2  to leave the component properties unchanged.\plain\f0\fs20\cf2 
\par }

[Footnotes]
#=IDH_ECPM_CLASS
$=EPJColourPopupMenu
K=EPJColourPopupMenu
A=EPJColourPopupMenu_object;EPJColourPopupMenu
[End]
6
HS
172
0

1
IDH_ECPM_HEIRACHY

NS
173
HS
174
0

0

AL(Exception_object,1)
HS
175
0

0
IDH_CPM_CLASS

HS
178
0

1
IDH_ECPM_PROPERTIES

HS
179
0

1
IDH_ECPM_METHODS

1510
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 173>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b EPJColourPopupMenu\plain\f0\fs18\cf2 
\par \plain\f0\fs12\cf2 
\par \plain\f0\fs18\cf1 \protect <HS 172>\plain\f0\fs18\cf2 Heirachy\plain\f0\fs18\cf1 \protect </HS 172>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 178>\plain\f0\fs18\cf2 Properties\plain\f0\fs18\cf1 \protect </HS 178>\plain\f0\fs18\cf2           \plain\f0\fs18\cf1 \protect <HS 179>\plain\f0\fs18\cf2 Methods\plain\f0\fs18\cf1 \protect </HS 179>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 173>\plain\f0\fs18\cf2 
\par Exceptions raised by \plain\f0\fs18\cf1 \protect <HS 175>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 175>\plain\f0\fs18\cf2  components.
\par 
\par \plain\f0\fs18\cf2\b Unit\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 PJColourPopupMenu
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 Any error that occurs in TPJColourPopupMenu code generates a EPJColourPopupMenu exception. EPJColourPopupMenu provides exactly the same properties and methods as the \plain\f0\fs18\cf1 \protect <HS 174>\plain\f0\fs18\cf2 Exception\plain\f0\fs18\cf1 \protect </HS 174>\plain\f0\fs18\cf2  class.
\par }

[Footnotes]
#=IDH_ECPM_HEIRACHY
$=EPJColourPopupMenu heirachy
[End]
2
HS
170
0

0

AL(TObject_object,1)
HS
171
0

0

AL(Exception_object,1)
492
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}}{\colortbl\red0\green0\blue0;\red0\green0\blue0;\red0\green128\blue0;}\pard \plain \plain\f0\fs18\cf1\b Heirachy\plain\f0\fs18\cf1 
\par 
\par \plain\f0\fs18\cf2 \protect <HS 170>\plain\f0\fs18\cf1 TObject\plain\f0\fs18\cf2 \protect </HS 170>\plain\f0\fs18\cf1 
\par     |
\par \plain\f0\fs18\cf2 \protect <HS 171>\plain\f0\fs18\cf1 Exception\plain\f0\fs18\cf2 \protect </HS 171>\plain\f0\fs18\cf1 
\par }

[Footnotes]
#=IDH_ECPM_PROPERTIES
$=EPJColourPopupMenu properties
[End]
1
HS
176
0

0

AL(Exception_object,1)
439
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}}{\colortbl\red0\green0\blue0;\red0\green0\blue0;\red0\green128\blue0;}\pard \plain \plain\f0\fs18\cf1\b Properties\plain\f0\fs18\cf1 
\par 
\par All properties of EPJColourPopupMenu are inherited without change from the \plain\f0\fs18\cf2 \protect <HS 176>\plain\f0\fs18\cf1 Exception\plain\f0\fs18\cf2 \protect </HS 176>\plain\f0\fs18\cf1  class.
\par }

[Footnotes]
#=IDH_ECPM_METHODS
$=EPJColourPopupMenu methods
[End]
1
HS
177
0

0

AL(Exception_object,1)
433
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}}{\colortbl\red0\green0\blue0;\red0\green0\blue0;\red0\green128\blue0;}\pard \plain \plain\f0\fs18\cf1\b Methods\plain\f0\fs18\cf1 
\par 
\par All methods of EPJColourPopupMenu are inherited without change from the \plain\f0\fs18\cf2 \protect <HS 177>\plain\f0\fs18\cf1 Exception\plain\f0\fs18\cf2 \protect </HS 177>\plain\f0\fs18\cf1  class.
\par }

[Footnotes]
#=IDH_TPJCOLOURMENUDISPLAYSTYLE
$=TPJColourMenuDisplayStyle
K=TPJColourMenuDisplayStyle
A=TPJColourMenuDisplayStyle
[End]
4
NS
201
HS
202
0

0
IDH_CPM_DISPLAYSTYLE

KP
211
HS
230
0

0
IDH_CPM_CLASS

1521
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 201>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourMenuDisplayStyle\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 201>\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf2\b Unit\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 PJColourPopupMenu
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 This is the type of the \plain\f0\fs18\cf1 \protect <HS 230>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 230>\plain\f0\fs18\cf2  component's \plain\f0\fs18\cf1 \protect <HS 202>\plain\f0\fs18\cf2 DisplayStyle\plain\f0\fs18\cf1 \protect </HS 202>\plain\f0\fs18\cf2  property. It is declared as:
\par \plain\f0\fs8\cf2 
\par \plain\f1\fs18\cf1\b \protect <KP 211>\plain\f1\fs18\cf2\b type\plain\f1\fs18\cf2  TPJColourMenuDisplayStyle = (
\par   dsTextOnly,     // displays text only (as standard menu)
\par   dsColourOnly,   // displays colours only
\par   dsBoth,         // displays both text and colour
\par   dsOwnerDraw     // user takes control over display
\par );\plain\f1\fs18\cf1 \protect </KP 211>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 See the property's help topic for further details.
\par }

[Footnotes]
#=IDH_TPJCOLOURMENUCOLUMNS
$=TPJColourMenuColumns
K=TPJColourMenuColumns
A=TPJColourMenuColumns
[End]
4
NS
204
HS
206
0

0
IDH_CPM_MENUCOLUMNS

KP
212
HS
231
0

0
IDH_CPM_CLASS

1501
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 204>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJColourMenuColumns\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 204>\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf2\b Unit\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 PJColourPopupMenu
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 This is the type of the \plain\f0\fs18\cf1 \protect <HS 231>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 231>\plain\f0\fs18\cf2  component's \plain\f0\fs18\cf1 \protect <HS 206>\plain\f0\fs18\cf2 MenuColumns\plain\f0\fs18\cf1 \protect </HS 206>\plain\f0\fs18\cf2  property. It is declared as:
\par \plain\f0\fs8\cf2 
\par \plain\f1\fs18\cf1 \protect <KP 212>\plain\f1\fs18\cf2\b type\plain\f1\fs18\cf2  TPJColourMenuColumns = (
\par   mc1,   // one column of sixteen colours
\par   mc2,   // two columns of eight colours each
\par   mc4,   // four columns of four colours each
\par   mc8    // eight columns of two colours each
\par );\plain\f1\fs18\cf1 \protect </KP 212>\plain\f1\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 See the property's help topic for further details.\plain\f1\fs18\cf2 
\par }

[Footnotes]
#=IDH_TPJCREATECOLOURMENUITEMEVENT
$=TPJCreateColourMenuItemEvent
K=TPJCreateColourMenuItemEvent
A=TPJCreateColourMenuItemEvent
[End]
6
NS
223
HS
226
0

0
IDH_CPM_CLASS

HS
227
0

0
IDH_CPM_ONCREATEMENUITEM

KP
232
HS
233
0

0

AL(TMenuItem_object,1)
HS
234
0

0

AL(TColor,1)
1750
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 223>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJCreateColourMenuItemEvent\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 223>\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf2\b Unit\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 PJColourPopupMenu
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 The type of event handler used by the \plain\f0\fs18\cf1 \protect <HS 226>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 226>\plain\f0\fs18\cf2  component's \plain\f0\fs18\cf1 \protect <HS 227>\plain\f0\fs18\cf2 OnCreateMenuItem\plain\f0\fs18\cf1 \protect </HS 227>\plain\f0\fs18\cf2  event. The type is declared as:
\par \plain\f0\fs8\cf2 
\par \plain\f1\fs18\cf1\b \protect <KP 232>\plain\f1\fs18\cf2\b type\plain\f1\fs18\cf2  TPJCreateColourMenuItemEvent = \plain\f1\fs18\cf2\b procedure\plain\f1\fs18\cf2  (Sender: TObject;\plain\f1\fs18\cf1 \protect </KP 232>\plain\f1\fs18\cf2 
\par   MenuItem: \plain\f1\fs18\cf1 \protect <HS 233>\plain\f1\fs18\cf2 TMenuItem\plain\f1\fs18\cf1 \protect </HS 233>\plain\f1\fs18\cf2 ; Colour: \plain\f1\fs18\cf1 \protect <HS 234>\plain\f1\fs18\cf2 TColor\plain\f1\fs18\cf1 \protect </HS 234>\plain\f1\fs18\cf2 ) \plain\f1\fs18\cf2\b of object\plain\f1\fs18\cf2 ;\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 See the event's help topic for further information and an explanation of the parameters.
\par }

[Footnotes]
#=IDH_TPJDRAWCOLOURMENUITEMEVENT
$=TPJDrawColourMenuItemEvent
K=TPJDrawColourMenuItemEvent
A=TPJDrawColourMenuItemEvent
[End]
8
NS
217
HS
218
0

0
IDH_CPM_CLASS

HS
219
0

0
IDH_CPM_ONDRAWMENUITEM

KP
235
HS
236
0

0

AL(TMenuItem_object,1)
HS
237
0

0

AL(TCanvas_object,1)
HS
238
0

0

AL(TRect,1)
HS
239
0

0

AL(TColor,1)
2007
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 217>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJDrawColourMenuItemEvent\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 217>\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf2\b Unit\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 PJColourPopupMenu
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 The type of event handler used by the \plain\f0\fs18\cf1 \protect <HS 218>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 218>\plain\f0\fs18\cf2  component's \plain\f0\fs18\cf1 \protect <HS 219>\plain\f0\fs18\cf2 OnDrawMenuItem\plain\f0\fs18\cf1 \protect </HS 219>\plain\f0\fs18\cf2  event. The type is declared as:
\par \plain\f0\fs8\cf2 
\par \plain\f1\fs18\cf1\b \protect <KP 235>\plain\f1\fs18\cf2\b type\plain\f1\fs18\cf2  TPJDrawColourMenuItemEvent = \plain\f1\fs18\cf2\b procedure\plain\f1\fs18\cf2  (Sender: TObject;
\par   MenuItem: \plain\f1\fs18\cf1 \protect <HS 236>\plain\f1\fs18\cf2 TMenuItem\plain\f1\fs18\cf1 \protect </HS 236>\plain\f1\fs18\cf2 ; ACanvas: \plain\f1\fs18\cf1 \protect <HS 237>\plain\f1\fs18\cf2 TCanvas\plain\f1\fs18\cf1 \protect </HS 237>\plain\f1\fs18\cf2 ; ARect: \plain\f1\fs18\cf1 \protect <HS 238>\plain\f1\fs18\cf2 TRect\plain\f1\fs18\cf1 \protect </HS 238>\plain\f1\fs18\cf2 ; 
\par   Selected: Boolean; Colour: \plain\f1\fs18\cf1 \protect <HS 239>\plain\f1\fs18\cf2 TColor\plain\f1\fs18\cf1 \protect </HS 239>\plain\f1\fs18\cf2 ) \plain\f1\fs18\cf2\b of object\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 235>\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 See the event's help topic for further information and an explanation of the parameters.
\par }

[Footnotes]
#=IDH_TPJMEASURECOLOURMENUITEMEVENT
$=TPJMeasureColourMenuItemEvent
K=TPJMeasureColourMenuItemEvent
A=TPJMeasureColourMenuItemEvent
[End]
7
NS
208
HS
209
0

0
IDH_CPM_CLASS

HS
210
0

0
IDH_CPM_ONMEASUREMENUITEM

KP
240
HS
241
0

0

AL(TMenuItem_object,1)
HS
242
0

0

AL(TCanvas_object,1)
HS
243
0

0

AL(TColor,1)
1940
{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057{\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}}{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;}\pard \plain \plain\f0\fs18\cf1 \protect <NS 208>\plain\f0\fs8\cf2 
\par \plain\f0\fs22\cf3\b TPJMeasureColourMenuItemEvent\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2  \plain\f0\fs18\cf1 \protect </NS 208>\plain\f0\fs18\cf2 
\par \plain\f0\fs18\cf2\b Unit\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 PJColourPopupMenu
\par 
\par \plain\f0\fs18\cf2\b Description\plain\f0\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 The type of event handler used by the \plain\f0\fs18\cf1 \protect <HS 209>\plain\f0\fs18\cf2 TPJColourPopupMenu\plain\f0\fs18\cf1 \protect </HS 209>\plain\f0\fs18\cf2  component's \plain\f0\fs18\cf1 \protect <HS 210>\plain\f0\fs18\cf2 OnMeasureMenuItem\plain\f0\fs18\cf1 \protect </HS 210>\plain\f0\fs18\cf2  event. The type is declared as:
\par \plain\f0\fs8\cf2 
\par \plain\f1\fs18\cf1\b \protect <KP 240>\plain\f1\fs18\cf2\b type\plain\f1\fs18\cf2  TPJMeasureColourMenuItemEvent = \plain\f1\fs18\cf2\b procedure\plain\f1\fs18\cf2  (Sender: TObject;
\par   MenuItem: \plain\f1\fs18\cf1 \protect <HS 241>\plain\f1\fs18\cf2 TMenuItem\plain\f1\fs18\cf1 \protect </HS 241>\plain\f1\fs18\cf2 ; ACanvas: \plain\f1\fs18\cf1 \protect <HS 242>\plain\f1\fs18\cf2 TCanvas\plain\f1\fs18\cf1 \protect </HS 242>\plain\f1\fs18\cf2 ; 
\par   \plain\f1\fs18\cf2\b var\plain\f1\fs18\cf2  Width, Height: Integer; Colour: \plain\f1\fs18\cf1 \protect <HS 243>\plain\f1\fs18\cf2 TColor\plain\f1\fs18\cf1 \protect </HS 243>\plain\f1\fs18\cf2 ) \plain\f1\fs18\cf2\b of object\plain\f1\fs18\cf2 ;\plain\f1\fs18\cf1 \protect </KP 240>\plain\f1\fs18\cf2 
\par \plain\f0\fs8\cf2 
\par \plain\f0\fs18\cf2 See the event's help topic for further information and an explanation of the parameters.
\par }

